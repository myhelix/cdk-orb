description: >
  Run cdk

parameters:
  attach_at:
    description: where should we attach the workspace
    default: "."
    type: string
  cdk_directory:
    description: the directory where your cdk.json file resides, relative to attach_at
    type: string
    default: "."
  cdk_stack:
    description: the name of the stack
    type: string
    default: "--all"
  cdk_command:
    description: the cdk command to run
    type: enum
    enum: ["diff", "deploy", "destroy"]
  cdk_params:
    description: the parameters to pass your cdk command
    type: string
    default: ""
  aws_access_key_id:
    default: AWS_ACCESS_KEY_ID
    description: |
      AWS access key id for IAM role. Set this to the name of the environment variable you will set to hold this value, i.e. AWS_ACCESS_KEY.
    type: env_var_name
  aws_account_id:
    default: AWS_ACCOUNT_ID
    description: |
      Name of environment variable storing the Amazon account ID.
    type: env_var_name
  aws_secret_access_key:
    default: AWS_SECRET_ACCESS_KEY
    description: |
      AWS secret key for IAM role. Set this to the name of the environment variable you will set to hold this value, i.e. AWS_SECRET_ACCESS_KEY.
    type: env_var_name
  environment:
    default: ENVIRONMENT
    description: The environment to apply on.
    type: env_var_name
  environment_type:
    default: ENVIRONMENT_TYPE
    description: The environment to apply on.
    type: env_var_name
  notify:
    default: false
    description: whether to notify slack
    type: boolean
  install_go:
    default: false
    description: whether to install golang
    type: boolean
  go_version:
    description: the version of go to install
    type: string
    default: "1.15.10"
  no_output_timeout:
    description: how long to wait for a job with no output before timing out
    type: string
    default: 60m

steps:
  - attach_workspace:
      at: << parameters.attach_at >>
  - when:
      condition: <<parameters.install_go>>
      steps:
        - go/install:
            version: <<parameters.go_version>>
  - assume_oidc_role
  - node/install-yarn:
      version: 1.22.19
  - run:
      name: yarn version
      command: yarn --version
  - run:
      name: yarn list
      command: yarn list
      working_directory: << parameters.attach_at >>
  - run:
      name: Run Cdk Command
      no_output_timeout: << parameters.no_output_timeout >>
      working_directory: << parameters.attach_at >>
      command: |
        assume_creds=$(aws sts assume-role --role-session-name ${CIRCLE_WORKFLOW_ID} --role-arn arn:aws:iam::$AWS_ACCOUNT_ID:role/$ASSUME_AWS_PROFILE)
        export AWS_ACCESS_KEY_ID=$(echo $assume_creds | jq -r .Credentials.AccessKeyId)
        export AWS_SECRET_ACCESS_KEY=$(echo $assume_creds | jq -r .Credentials.SecretAccessKey)
        export AWS_SESSION_TOKEN=$(echo $assume_creds | jq -r .Credentials.SessionToken)
        cd << parameters.cdk_directory >>
        npx cdk << parameters.cdk_command >> << parameters.cdk_stack >> << parameters.cdk_params >>
  - when:
      condition: <<parameters.notify>>
      steps:
        - slack/notify:
            color: '#22e33f'
            message: 'Deployed to << parameters.environment >>.'

